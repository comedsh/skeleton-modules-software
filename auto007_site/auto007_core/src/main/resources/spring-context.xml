<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"  
    xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"  
    xmlns:jpa="http://www.springframework.org/schema/data/jpa" 
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:security="http://www.springframework.org/schema/security"  
    xsi:schemaLocation="  
        http://www.springframework.org/schema/aop   
        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd  
        http://www.springframework.org/schema/mvc   
        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd 
        http://www.springframework.org/schema/security   
        http://www.springframework.org/schema/security/spring-security-3.2.xsd  
        http://www.springframework.org/schema/beans   
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
        http://www.springframework.org/schema/data/jpa   
        http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd  
        http://www.springframework.org/schema/tx   
        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd  
        http://www.springframework.org/schema/context   
        http://www.springframework.org/schema/context/spring-context-4.0.xsd">  
  	
  	<!-- 数据库配置文件位置 -->  
    <context:property-placeholder location="classpath:/config/auto007.properties" />  
    
  	<context:annotation-config />
	<context:component-scan base-package="com.fenghua.auto" />
	
	<aop:aspectj-autoproxy proxy-target-class="true"/>
        
	<bean id="performanceTimeThreshold" class="java.lang.Long">
        <constructor-arg type="String" value="${auto007.performance.timeThreshold}"/> 
    </bean>  
	<bean id="performanceReceiver" class="java.lang.String">
        <constructor-arg type="String" value="${auto007.performance.receiver}"/> 
    </bean>     
	<bean id="performanceCclist" class="java.lang.String">
        <constructor-arg type="String" value="${auto007.performance.cclist}"/> 
    </bean>       
	<bean id="smtpHost" class="java.lang.String">
        <constructor-arg type="String" value="${auto007.smtp.host}"/> 
    </bean>      
	<bean id="smtpPort" class="java.lang.String">
        <constructor-arg type="String" value="${auto007.smtp.port}"/> 
    </bean>       
	<bean id="mailSender" class="java.lang.String">
        <constructor-arg type="String" value="${auto007.mail.sender}"/> 
    </bean>       
	<bean id="mailPwd" class="java.lang.String">
        <constructor-arg type="String" value="${auto007.mail.pwd}"/> 
    </bean>     
    
    <!-- message bundle -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>classpath:i18n/messages</value>
                <value>classpath:i18n/exceptions</value>
                <value>classpath:i18n/order</value>
                <value>classpath:i18n/user</value>
                <value>classpath:i18n/sku</value>
            </list>
        </property>
        <property name="defaultEncoding" value="UTF-8" />
        <property name="cacheSeconds" value="3600"/>
        <property name="useCodeAsDefaultMessage" value="true" />
    </bean>
    
    <bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
        <property name="paramName" value="locale"/>
    </bean>
    
	<mvc:interceptors>
        <!-- 切换语言拦截器 -->
        <mvc:interceptor>
            <mvc:mapping path="/*"/>
            <ref bean="localeChangeInterceptor"/>
        </mvc:interceptor>

    </mvc:interceptors>
	
	<!-- 基于Cookie的国际化配置,拦截器和基于请求的相同  -->
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver" >
		<!-- 设置cookieName名称，可以根据名称通过js来修改设置，也可以像上面演示的那样修改设置，默认的名称为 类名+LOCALE（即：org.springframework.web.servlet.i18n.CookieLocaleResolver.LOCALE-->
	    <property name="cookieName" value="lang"/>
	    <!-- 设置最大有效时间，如果是-1，则不存储，浏览器关闭后即失效，默认为Integer.MAX_INT-->
	    <property name="cookieMaxAge" value="-1" />
	    <!-- 设置cookie可见的地址，默认是“/”即对网站所有地址都是可见的，如果设为其它地址，则只有该地址或其后的地址才可见-->
	    <property name="cookiePath" value="/" />
	</bean>
   
    <!-- 基于Session的国际化配置,拦截器和基于请求的相同  -->
    <!-- 
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver" />
     -->
    <bean id="requestMappingHandlerMapping" class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"></bean> 
    <bean id="requestMappingHandlerAdapter" class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name='messageConverters'>
		  <list>
		   <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
		   <bean class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter"/>
		   <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
		   <bean class="org.springframework.http.converter.StringHttpMessageConverter"></bean>
		   <bean class="org.springframework.http.converter.ResourceHttpMessageConverter"></bean>
		   <bean class="org.springframework.http.converter.xml.SourceHttpMessageConverter"></bean>
		   <bean class="org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter"></bean>
		  </list>
		 </property>      
    </bean>
    <bean id="multipartResolver"    
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">    
        <!-- one of the properties available; the maximum file size in bytes -->    
        <property name="maxUploadSize" value="2048000000" />    
    </bean>  
</beans>        